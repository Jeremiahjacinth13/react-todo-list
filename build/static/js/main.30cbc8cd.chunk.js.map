{"version":3,"sources":["TodoBanner.js","TodoCreator.js","TodoRow.js","VisibilityControl.jsx","App.js","index.js"],"names":["TodoBanner","className","this","props","name","tasks","filter","t","done","length","Component","TodoCreator","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","callback","state","type","onChange","onClick","TodoRow","item","action","checked","VisibilityControl","render","isChecked","e","id","htmlFor","description","App","task","todoItems","find","localStorage","setItem","JSON","stringify","componentDidMount","console","log","data","getItem","parse","userName","showCompleted","toggleTodo","todo","map","todoTableRows","donevalue","key","ReactDOM","StrictMode","document","getElementById"],"mappings":"+NAaeA,E,uKATX,OACE,wBAAIC,UAAU,yCACXC,KAAKC,MAAMC,KADd,kBAEIF,KAAKC,MAAME,MAAMC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,QAAMC,OAF1C,qB,GAHmBC,aCuBVC,E,kDAtBb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IAGRS,mBAAoB,SAACC,GACnB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SALzB,EAOlBC,cAAe,WACb,EAAKf,MAAMgB,SAAS,EAAKC,MAAML,aAC/B,EAAKD,SAAS,CAACC,YAAa,MAP5B,EAAKK,MAAQ,CAACL,YAAa,IAFX,E,qDAYhB,OACE,yBAAKd,UAAU,QACb,2BAAOoB,KAAK,OAAOpB,UAAU,eAAegB,MAAQf,KAAKkB,MAAML,YAC9DO,SAAYpB,KAAKU,qBAClB,4BAAQX,UAAU,uBAAuBsB,QAASrB,KAAKgB,eAAvD,Y,GAjBkBR,aCcXc,E,uKAbJ,IAAD,OACN,OACE,4BACE,4BAAKtB,KAAKC,MAAMsB,KAAKC,QACrB,4BACE,2BAAOL,KAAK,WAAWM,QAAWzB,KAAKC,MAAMsB,KAAKjB,KAClDc,SAAW,kBAAK,EAAKnB,MAAMgB,SAAS,EAAKhB,MAAMsB,e,GAPnCf,aCADkB,E,4MACnBC,OAAS,kBACP,yBAAK5B,UAAU,cACb,2BAAOoB,KAAK,WAAWpB,UAAU,mBAAmB0B,QAAW,EAAKxB,MAAM2B,UAAWR,SAAW,SAAAS,GAAC,OAAE,EAAK5B,MAAMgB,SAASY,EAAEf,OAAOW,UAAUK,GAAK,aAC/I,2BAAOC,QAAQ,YAAYhC,UAAU,oBAArC,OAA6D,EAAKE,MAAM+B,e,YAJ/BxB,aC+FhCyB,G,wDAvFb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAcRS,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhBzB,EAmBnBC,cAAgB,SAACkB,GACV,EAAKhB,MAAMiB,UAAUC,MAAK,SAAAb,GAAI,OAAIA,EAAKC,SAAWU,MACrD,EAAKtB,SAAS,CACZuB,UAAU,GAAD,mBAAM,EAAKjB,MAAMiB,WAAjB,CAA4B,CAAEX,OAAQU,EAAM5B,MAAM,KAC3DO,YAAa,KACb,kBAAMwB,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKtB,YAxB3C,EA4BnBuB,kBAAoB,WAClBC,QAAQC,IAAI,8BACZ,IAAIC,EAAOP,aAAaQ,QAAQ,SAChC,EAAKjC,SAAiB,MAARgC,EAAeL,KAAKO,MAAMF,GAAQ,CAC9CG,SAAU,WACVZ,UAAW,CAAC,CAACX,OAAQ,cAAelB,MAAM,GAC1C,CAACkB,OAAQ,YAAalB,MAAM,GAC5B,CAACkB,OAAQ,kBAAmBlB,MAAM,GAClC,CAACkB,OAAQ,WAAYlB,MAAM,IAC1B0C,eAAe,KArCD,EAyCnBC,WAAa,SAACC,GACZ,EAAKtC,SAAS,CAAEuB,UAAW,EAAKjB,MAAMiB,UAAUgB,KAAI,SAAA5B,GAAI,OAAIA,EAAKC,SAAW0B,EAAK1B,OAArB,2BAAmCD,GAAnC,IAAyCjB,MAAOiB,EAAKjB,OAASiB,QA1CzG,EA6CnB6B,cAAgB,SAACC,GAAD,OAAe,EAAKnC,MAAMiB,UACvC/B,QAAO,SAAAmB,GAAI,OAAIA,EAAKjB,OAAS+C,KAAWF,KAAI,SAAA5B,GAAI,OACjD,kBAAC,EAAD,CAAS+B,IAAO/B,EAAKC,OAAQD,KAAMA,EAAMN,SAAW,EAAKgC,iBA7CzD,EAAK/B,MAAQ,CACX6B,SAAU,OACVZ,UACE,CAAC,CAAEX,OAAQ,cAAelB,MAAM,GAChC,CAAEkB,OAAQ,YAAalB,MAAM,GAC7B,CAAEkB,OAAQ,kBAAmBlB,MAAM,GACnC,CAAEkB,OAAQ,WAAYlB,MAAM,IAG9B0C,eAAe,GAXA,E,qDAkDT,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAY9C,KAAQF,KAAKkB,MAAM6B,SAAU5C,MAAQH,KAAKkB,MAAMiB,YAC5D,yBAAKpC,UAAU,mBACb,kBAAC,EAAD,CAAakB,SAAYjB,KAAKgB,gBAC9B,2BAAOjB,UAAU,sCACf,+BACE,4BACE,2CACA,qCAEF,+BACGC,KAAKoD,eAAc,MAI1B,yBAAKrD,UAAU,2CACb,kBAAC,EAAD,CAAmBiC,YAAc,kBAAkBJ,UAAY5B,KAAKkB,MAAM8B,cACxE/B,SAAY,SAACQ,GAAD,OAAa,EAAKb,SAAS,CAACoC,cAAevB,QAE1DzB,KAAKkB,MAAM8B,eACV,2BAAOjD,UAAY,sCACjB,+BACE,4BACE,2CACA,sCAGJ,+BAAQC,KAAKoD,eAAc,W,GAjFvB5C,cCFlB+C,IAAS5B,OACP,kBAAC,IAAM6B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.30cbc8cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoBanner extends Component{\n  render(){\n    return(\n      <h5 className=\"bg-primary text-white text-center p-2\">\n        {this.props.name}'s To Do List\n        ({this.props.tasks.filter(t => !t.done).length} items to do) \n      </h5>\n    )\n  }\n}\n\nexport default TodoBanner","import React, { Component } from 'react';\n\nclass TodoCreator extends Component{\n  constructor(props){\n    super(props);\n    this.state = {newItemText: ''}\n  }\n  updateNewTextValue =(event) => {\n    this.setState({newItemText: event.target.value})\n  }\n  createNewTodo =()=>{\n    this.props.callback(this.state.newItemText);\n    this.setState({newItemText: ''});\n  }\n  render(){\n    return(\n      <div className=\"my-1\">\n        <input type=\"text\" className=\"form-control\" value ={this.state.newItemText}\n         onChange = {this.updateNewTextValue} />\n        <button className=\"btn btn-primary mt-1\" onClick={this.createNewTodo}>Add</button>\n      </div>\n    )\n  }\n}\n\nexport default TodoCreator","import React,{ Component } from 'react'\n\nclass TodoRow extends Component{\n  render(){\n    return(\n      <tr>\n        <td>{this.props.item.action}</td>\n        <td>\n          <input type=\"checkbox\" checked = {this.props.item.done} \n          onChange ={()=> this.props.callback(this.props.item)}/>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default TodoRow","import React, { Component } from 'react';\n\nexport default class VisibilityControl extends Component{\n  render = () =>\n    <div className=\"form-check\">\n      <input type=\"checkbox\" className=\"form-check-input\" checked = {this.props.isChecked} onChange ={e=>this.props.callback(e.target.checked)} id = 'checkbox'/>\n      <label htmlFor=\"#checkbox\" className=\"form-check-label\">Show{this.props.description}</label>\n    </div>\n}","import React, { Component } from 'react';\nimport TodoBanner from './TodoBanner';\nimport TodoCreator from './TodoCreator';\nimport TodoRow from './TodoRow';\nimport VisibilityControl from './VisibilityControl';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: 'King',\n      todoItems:\n        [{ action: 'Buy Flowers', done: true },\n        { action: 'Get Shoes', done: false },\n        { action: 'Collect Tickets', done: false },\n        { action: \"Call Joe\", done: true }\n        ],\n      // newItemText: ''\n      showCompleted: true\n    }\n  }\n\n  updateNewTextValue = (event) => {\n    this.setState({ newItemText: event.target.value })\n  }\n\n  createNewTodo = (task) => {\n    if (!this.state.todoItems.find(item => item.action === task)) {\n      this.setState({\n        todoItems: [...this.state.todoItems, { action: task, done: false }],\n        newItemText: ''\n      },() => localStorage.setItem('todos', JSON.stringify(this.state)) );\n    }\n  }\n\n  componentDidMount = () =>{\n    console.log('component has been mounted')\n    let data = localStorage.getItem('todos');\n    this.setState(data != null ? JSON.parse(data) : {\n      userName: \"Jeremiah\",\n      todoItems: [{action: 'Buy Flowers', done: false},\n      {action: \"Get Shoes\", done: false},\n      {action: \"Collect Tickets\", done: true},\n      {action: \"Call Joe\", done: false}\n    ], showCompleted: true\n    });\n  }\n\n  toggleTodo = (todo) => {\n    this.setState({ todoItems: this.state.todoItems.map(item => item.action === todo.action ? { ...item, done: !item.done } : item) });\n  }\n\n  todoTableRows = (donevalue) => this.state.todoItems\n    .filter(item => item.done === donevalue).map(item =>\n    <TodoRow key = {item.action} item={item} callback ={this.toggleTodo} />\n  );\n\n  render() {\n    return (\n      <div>\n        <TodoBanner name = {this.state.userName} tasks ={this.state.todoItems} />\n        <div className=\"container-fluid\">\n          <TodoCreator callback = {this.createNewTodo}/>\n          <table className=\"table table-striped table-bordered\">\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Done</th>\n              </tr>\n              <tbody>\n                {this.todoTableRows(false)}\n              </tbody>\n            </thead>\n          </table>\n          <div className=\"bg-secondary text-white text-center p-2\">\n            <VisibilityControl description = 'Completed Tasks' isChecked ={this.state.showCompleted}\n              callback = {(checked) => this.setState({showCompleted: checked})}/>\n          </div>\n          {this.state.showCompleted &&\n            <table className = 'table table-striped table-bordered'>\n              <thead>\n                <tr>\n                  <th>Description</th>\n                  <th>Done</th>\n                </tr>\n              </thead>\n              <tbody>{this.todoTableRows(true)}</tbody>\n            </table>\n          }\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}